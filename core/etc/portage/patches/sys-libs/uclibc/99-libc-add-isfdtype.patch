From f22cca4722fa66e424562e69f4afa2bca0af871d Mon Sep 17 00:00:00 2001
From: "Anthony G. Basile" <blueness@gentoo.org>
Date: Sun, 28 Jul 2013 09:08:34 -0400
Subject: [PATCH] libc: add isfdtype()

isfdtype(int fd, int fdtype) check whether a file descriptor fd is
of type fdtype, where the types are defined in stat(2).  It is
supported in glibc and BSD, and used by utilities such as acpid.

Signed-off-by: Anthony G. Basile <blueness@gentoo.org>
Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
---
 libc/misc/file/isfdtype.c | 40 ++++++++++++++++++++++++++++++++++++++++
 1 file changed, 40 insertions(+)
 create mode 100644 libc/misc/file/isfdtype.c

diff --git a/libc/misc/file/isfdtype.c b/libc/misc/file/isfdtype.c
new file mode 100644
index 0000000..4d9199b
--- /dev/null
+++ libc/misc/file/isfdtype.c
@@ -0,0 +1,40 @@
+/* Determine whether descriptor has given property.
+   Copyright (C) 1996-2013 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <http://www.gnu.org/licenses/>.  */
+
+#include <errno.h>
+#include <sys/stat.h>
+#include <sys/socket.h>
+#include <sys/types.h>
+#ifdef __UCLIBC_HAS_LFS__
+# include <_lfs_64.h>
+#else
+# define stat64 stat
+# define fstat64 fstat
+#endif
+
+int
+isfdtype (int fildes, int fdtype)
+{
+  struct stat64 st;
+  int save_error = errno;
+  int result = fstat64 (fildes, &st);
+  __set_errno (save_error);
+  if (result)
+	  return result;
+  return (st.st_mode & S_IFMT) == (mode_t) fdtype;
+}
-- 
1.8.3.2.733.gf8abaeb

